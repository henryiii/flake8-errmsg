[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"


[project]
name = "flake8_errmsg"
authors = [
    { name = "Henry Schreiner", email = "henryschreineriii@gmail.com" },
]

description = "Flake8 checker for raw literals inside raises."
readme = "README.md"

requires-python = ">=3.10"

classifiers = [
    "Framework :: Flake8",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Quality Assurance",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Development Status :: 5 - Production/Stable",
    "Typing :: Typed",
]
dynamic = ["version"]

[project.optional-dependencies]
test = [
    "pytest >=7",
]
dev = [
    "pytest >=7",
    "flake8",
]

[project.urls]
homepage = "https://github.com/henryiii/flake8-errmsg"

[project.scripts]
flake8-errmsg = "flake8_errmsg:main"

[project.entry-points."flake8.extension"]
EM = "flake8_errmsg:ErrMsgASTPlugin"


[tool.hatch]
version.path = "src/flake8_errmsg/__init__.py"
envs.default.dependencies = [
  "pytest",
]


[tool.pytest.ini_options]
minversion = "7.0"
addopts = ["-ra", "--showlocals", "--strict-markers", "--strict-config"]
xfail_strict = true
filterwarnings = ["error"]
log_cli_level = "INFO"
testpaths = [
    "tests",
]


[tool.mypy]
files = "src"
python_version = "3.10"
warn_unused_configs = true
strict = true
show_error_codes = true
enable_error_code = ["ignore-without-code", "redundant-expr", "truthy-bool"]
warn_unreachable = true


[tool.black]
target-version = ['py310']


[tool.ruff]
select = [
  "E", "F", "W", # flake8
  "B",           # flake8-bugbear
  "I",           # isort
  "ARG",         # flake8-unused-arguments
  "C4",          # flake8-comprehensions
  "ICN",         # flake8-import-conventions
  "ISC",         # flake8-implicit-str-concat
  "G",           # flake8-logging-format
  "PGH",         # pygrep-hooks
  "PIE",         # flake8-pie
  "PL",          # pylint
  "PT",          # flake8-pytest-style
  "PTH",         # flake8-use-pathlib
  "RET",         # flake8-return
  "RUF",         # Ruff-specific
  "SIM",         # flake8-simplify
  "T20",         # flake8-print
  "UP",          # pyupgrade
  "YTT",         # flake8-2020
  "EXE",         # flake8-executable
  "NPY",         # NumPy specific rules
  "PD",          # pandas-vet
]
extend-ignore = [
  "PLR",    # Design related pylint codes
  "E501",   # Line too long
]
src = ["src"]
unfixable = [
  "T20",  # Removes print statements
  "F841", # Removes unused variables
]
flake8-unused-arguments.ignore-variadic-names = true
isort.required-imports = ["from __future__ import annotations"]

[tool.ruff.per-file-ignores]
"tests/**" = ["T20"]


[tool.pylint]
master.py-version = "3.10"
master.ignore-paths= ["src/flake8_errmsg/_version.py"]
reports.output-format = "colorized"
similarities.ignore-imports = "yes"
messages_control.disable = [
  "design",
  "fixme",
  "line-too-long",
  "wrong-import-position",
  "missing-class-docstring",
  "missing-function-docstring",
  "missing-module-docstring",
  "invalid-name",
]

[tool.repo-review]
ignore = ["PY004", "PC111", "RTD"]
